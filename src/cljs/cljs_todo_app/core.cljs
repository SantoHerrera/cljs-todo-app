(ns cljs-todo-app.core
  (:require
   [reagent.core :as r]
   [reagent.dom :as rdom]
   [clerk.core :as clerk]
   [accountant.core :as accountant]))

;; Page mounting component

;; (defn current-page []
;;   (fn []
;;     (let [page (:current-page (session/get :route))]
;;       [:div
;;        [:header
;;         [:p [:a {:href (path-for :index)} "Home"] " | "
;;          [:a {:href (path-for :about)} "About cljs-todo-app"]]]
;;        [page]
;;        [:footer
;;         [:p "cljs-todo-app was generated by the "
;;          [:a {:href "https://github.com/reagent-project/reagent-template"} "Reagent Template"] "."]]])))


(defn atom-input [value]
  [:input {:type "text"
           :value @value
           :on-change #(reset! value (-> % .-target .-value))}])

(defn shared-state []
  (let [val (r/atom "foo")]
    (fn []
      [:div
       [:p "The value is now: " @val]
       [:p "Change it here: " [atom-input val]]])))

(defn worked? 
 []
 [:p "fuck yeah"])



;; (defn my-todo-app []
;;   [:div]]
;;   [shared-state]
;;   [:div [:p "worked"]]})

(defn my-todo-app
  []
  [:div
   [shared-state]
   [worked?]])  
  
 
 
 


;; -------------------------
;; Initialize app

(defn mount-root []
  (rdom/render [my-todo-app] (.getElementById js/document "app")))

(defn init! []
  (clerk/initialize!)
  (accountant/configure-navigation!
   {:nav-handler
    :path-exists?})
  (accountant/dispatch-current!)
  (mount-root))
